@using PagedList;
@using PagedList.Mvc;

@model IPagedList<SMSystem.Models.Cours>

@*@model IEnumerable<SMSystem.Models.Cours>*@

@{
    ViewBag.Title = "CourseList";
}

<h2>Course List</h2>

@if (@ViewBag.Message != null)
{
    <h3 style="margin:10px; color: red; padding:10px">
        @ViewBag.Message
    </h3>
}

<p>
    @Html.ActionLink("Add Course", "AddCourse")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayName("Course Id")
            @*@Html.DisplayNameFor(model => model.CourseId)*@
        </th>
        <th>
            @Html.DisplayName("Name")
            @*@Html.DisplayNameFor(model => model.CourseName)*@
        </th>
        <th>
            @Html.DisplayName("Duration")
            @*@Html.DisplayNameFor(model => model.Duration)*@
        </th>
        <th>
            @Html.DisplayName("Description")
            @*@Html.DisplayNameFor(model => model.Description)*@
        </th>
        <th>
            @Html.DisplayName("Action")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CourseId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CourseName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.ActionLink("Edit", "EditCourse", new { id = item.CourseId }) |
                @Html.ActionLink("Delete", "DeleteCourse", new { id = item.CourseId }, new { onclick = "return confirm('Are you sure you want to delete this Course?')" })
            </td>
        </tr>
    }

</table>

<div id='Paging'>

    @Html.PagedListPager(Model, page => Url.Action("CourseList",
                            new
                                {
                                    page,
                                    searchby = Request.QueryString["searchby"],
                                    search = Request.QueryString["search"]
                                    }),
                                    new PagedListRenderOptions()
                                    {
                                        Display = PagedListDisplayMode.IfNeeded,
                                        DisplayPageCountAndCurrentLocation = true,
                                        DisplayItemSliceAndTotal = true
                                    })
</div>  